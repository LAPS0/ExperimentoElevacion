scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.1
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.1
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.1
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == "S001"))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.1
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == "S001"))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]-m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]-m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.1
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == "S001"))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.2
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == "S001"))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]-m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]-m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.2
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]-m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.2
f.2 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f.2
### Analysis Slopes -----
fig = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig[[i]] = fig1
}
fig[[1]]
fig[[2ç]]
fig[[2]]
### Analysis Slopes -----
fig = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == "S001"),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig[[i]] = fig1
}
### Analysis Slopes -----
fig = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("Adj.r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$adj.r.squared))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig[[i]] = fig1
}
fig[[2]]
fig[[3]]
fig[[4]]
fig[[5]]
fig[[6]]
summary(m.pend)
aa = summary(m.pend)
aa$r.squared
### Analysis Slopes -----
fig = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = m.pend$coefficients[[2]],
b = m.pend$coefficients[[1]]))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic(b),
list(a = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
b = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = summary(m.pend)$r.squared))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 2.5, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0.5, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 2.5, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0.5,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 2.5, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0.5, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig[[i]] = fig1
}
fig[[2]]
fig[[3]]
fig[[4]]
fig[[5]]
fig[[6]]
fig[[7]]
fig[[8]]
fig[[9]]
fig[[10]]
fig[[11]]
fig[[12]]
fig[[13]]
fig[[14]]
fig[[15]]
fig[[16]]
fig[[17]]
fig[[18]]
fig[[19]]
fig[[20]]
fig[[21]]
fig[[22]]
