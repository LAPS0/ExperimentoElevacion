results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$slope = m.pend$coefficients[[2]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$intercepto = m.pend$coefficients[[1]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$intercepto = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]],digits = 2),
b = round(m.pend$coefficients[[1]], digits = 2)))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]]+m.pend$coefficients[[4]], digits = 2),
b = round(m.pend$coefficients[[1]]+m.pend$coefficients[[3]], digits = 2)))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = round(summary(m.pend)$r.squared, digits = 2)))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 0.2, y = 6.6, label = sub, hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#999999")+
geom_text(x = 0.2, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 0.2, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0, nudge_x =  0,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 0.2, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig_normal[[i]] = fig1
}
for (i in 2:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$slope = m.pend$coefficients[[2]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$intercepto = m.pend$coefficients[[1]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$intercepto = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]],digits = 2),
b = round(m.pend$coefficients[[1]], digits = 2)))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]]+m.pend$coefficients[[4]], digits = 2),
b = round(m.pend$coefficients[[1]]+m.pend$coefficients[[3]], digits = 2)))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = round(summary(m.pend)$r.squared, digits = 2)))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 0.2, y = 6.6, label = sub, hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#999999")+
geom_text(x = 0.2, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 0.2, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0, nudge_x =  0,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 0.2, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig_normal[[i]] = fig1
}
Figure1 = ggarrange(fig_normal[[1]],fig_normal[[2]],fig_normal[[3]],fig_normal[[4]],fig_normal[[5]],fig_normal[[6]],fig_normal[[7]],fig_normal[[8]],fig_normal[[9]],
fig_normal[[10]],fig_normal[[11]],fig_normal[[12]],fig_normal[[13]],fig_normal[[14]],fig_normal[[15]],fig_normal[[16]],fig_normal[[17]],fig_normal[[18]],
fig_normal[[19]],fig_normal[[20]],fig_normal[[21]],fig_normal[[22]],
ncol = 5, nrow = 5,
common.legend = TRUE, legend="top", align = "hv")
# Figure1
mi_nombre_de_archivo = paste("figuras", .Platform$file.sep, "1. Lm for subject NORMAL", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=Figure1, width=50, height=50, units="cm", limitsize=FALSE, dpi=600)
# Figure lm for ROVED
fig_roved = list()
for (i in 2:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(percived_distance ~ target_distance*condition,
data = filter(results_tbl,type == "ROVED", subject == sub))
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$slope = m.pend$coefficients[[2]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$intercepto = m.pend$coefficients[[1]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$intercepto = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]],digits = 2),
b = round(m.pend$coefficients[[1]], digits = 2)))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]]+m.pend$coefficients[[4]], digits = 2),
b = round(m.pend$coefficients[[1]]+m.pend$coefficients[[3]], digits = 2)))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = round(summary(m.pend)$r.squared, digits = 2)))
fig2 = ggplot(filter(results_tbl,type == "ROVED", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 0.2, y = 6.6, label = sub, hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#999999")+
geom_text(x = 0.2, y = 6.1, label = as.character(as.expression(eq1)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#000000")+
geom_text(x = 0.2, y = 5.7, label = as.character(as.expression(eq2)), hjust = 0, nudge_x =  0,parse = TRUE, size = 4, color = "#E69F00")+
geom_text(x = 0.2, y = 5.3, label = as.character(as.expression(eq3)), hjust = 0, nudge_x =  0, parse = TRUE, size = 4, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig_roved[[i]] = fig2
}
Figure2 = ggarrange(fig_roved[[1]],fig_roved[[2]],fig_roved[[3]],fig_roved[[4]],fig_roved[[5]],fig_roved[[6]],fig_roved[[7]],fig_roved[[8]],fig_roved[[9]],
fig_roved[[10]],fig_roved[[11]],fig_roved[[12]],fig_roved[[13]],fig_roved[[14]],fig_roved[[15]],fig_roved[[16]],fig_roved[[17]],fig_roved[[18]],
fig_roved[[19]],fig_roved[[20]],fig_roved[[21]],fig_roved[[22]],
ncol = 5, nrow = 5,
common.legend = TRUE, legend="top", align = "hv")
mi_nombre_de_archivo = paste("figuras", .Platform$file.sep, "2. Lm for subject ROVED", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=Figure2, width=50, height=50, units="cm", limitsize=FALSE, dpi=600)
# Slope for condition
results_tblp <- results_tbl %>%
group_by(condition, type) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
f3 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope), shape=0, size = 1.2)+
geom_line(aes(group = type),size = 1.2)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = slope, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = slope, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Slope with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f3
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "3. Lm Slope", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
t.test(filter(results_tbl,
condition=="Ear level" & type=="NORMAL")$slope,
filter(results_tbl,
condition=="Floor level" & type=="NORMAL")$slope,
paired = TRUE)
t.test(filter(results_tbl,
condition=="Floor level" & type=="NORMAL")$slope,
filter(results_tbl,
condition=="Floor level" & type=="ROVED")$slope,
paired = TRUE)
t.test(filter(results_tbl,
condition=="Ear level" & type=="NORMAL")$slope,
filter(results_tbl,
condition=="Floor level" & type=="ROVED")$slope,
paired = TRUE)
f4 =  ggplot(results_tblp, aes(x = condition,y = mintercepto, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mintercepto, ymin=mintercepto-SDintercepto, ymax=mintercepto+SDintercepto), shape=0, size = 1.2)+
geom_line(aes(group = type),size = 1.2)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = intercepto, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = intercepto, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
# stat_summary(fun.data = "mean_se",
#              geom = "pointrange",
#              alpha = 1,
#              size = 1,
#              # position = position_dodge(width = 1)
#              position = position_jitterdodge(jitter.width = 0.6,
#                                              jitter.height = 0,
#                                              dodge.width = 0 )) +
# stat_summary(fun.data = "mean_se",
#              geom = "linerange",
#              size=2,
#              position = position_dodge(width = 1)) +
labs(x = "Condition",
y = "Intercepto with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 8,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 7.9, yend = 7.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f4
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "4. Lm Intercepto", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f4, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
t.test(filter(results_tbl,
condition=="Ear level" & type=="ROVED")$slope,
filter(results_tbl,
condition=="Floor level" & type=="ROVED")$slope,
paired = TRUE)
# Analysis Range
results_tblrange2 <- filter(results_tbl, target_distance == 2) %>%
group_by(subject,condition, type, target_distance) %>%
summarise(percived_distance_2 = percived_distance)%>%
ungroup()
results_tblrange6 <- filter(results_tbl, target_distance == 6) %>%
group_by(subject,condition, type, target_distance) %>%
summarise(percived_distance_6 = percived_distance)%>%
ungroup()
results_tblrange = results_tblrange2
results_tblrange$percived_distance_6 = results_tblrange6$percived_distance_6
results_tblrange$range = results_tblrange$percived_distance_6 - results_tblrange$percived_distance_2
results_tblrangeP <- results_tblrange %>%
group_by(condition, type) %>%
summarise(mrange = mean(range),
sdrange = sd(range))%>%
ungroup()
rm("results_tblrange2", "results_tblrange6")
f5 =  ggplot(results_tblrangeP, aes(x = condition,y = mrange, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mrange, ymin=mrange-sdrange, ymax=mrange+sdrange), shape=0, size = 1.2)+
geom_line(aes(group = type),size = 1.2)+
geom_point(data = results_tblrange, mapping = aes(x = condition,y = range, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tblrange, mapping = aes(x = condition,y = range, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Range [m]") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 6.7,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 6.6, yend = 6.6, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f5
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "5. Range", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f5, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
t.test(filter(results_tblrange,
condition=="Ear level" & type=="NORMAL")$range,
filter(results_tblrange,
condition=="Floor level" & type=="NORMAL")$range,
paired = TRUE)
t.test(filter(results_tblrange,
condition=="Ear level" & type=="ROVED")$range,
filter(results_tblrange,
condition=="Floor level" & type=="ROVED")$range,
paired = TRUE)
# Response variability
## Intra-subject
tabla.ind.var <- filter(results_tbl) %>%
group_by(target_distance,condition,type) %>%
summarise(mSD = mean(perc_dist_sd),
SdSd = sd(perc_dist_sd),
n = n())  %>%
ungroup()
f3 <- ggplot(tabla.ind.var, aes(x=target_distance, y =mSD, group = condition, color = condition)) +
geom_point()+
geom_line(size = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_errorbar(data=tabla.ind.var,alpha = 2, width=0, size=1,
mapping=aes(ymin = mSD - (SdSd/sqrt(n)),
ymax = mSD + (SdSd/sqrt(n)),
color=condition))+
geom_abline(intercept = 0, slope = 0, linetype=2) +
facet_grid(.~ type )+
scale_y_log10(name="Standard deviation (m)\n +/- SEM Intra-subject", breaks=c(0,0.2,0.3,0.4,0.5,0.6), labels=c(0,0.2,0.3,0.4,0.5,0.6), minor_breaks=NULL, limits = c(-1.1,1.85)) +
scale_x_log10(name="Distance source (m)",  breaks=c(2,2.9,4.2,6), labels=c(2,2.9,4.2,6), minor_breaks=NULL, limits = c(1.9,6.1)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f3
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Variabiliti", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
tabla.ind.var <- filter(results_tbl,type == "ROVED") %>%
group_by(target_distance,condition) %>%
summarise(mSD = mean(perc_dist_sd),
SdSd = sd(perc_dist_sd),
n = n())  %>%
ungroup()
f31 <- ggplot(tabla.ind.var, aes(x=target_distance, y =mSD, group = condition, color = condition)) +
geom_point()+
geom_line(size = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_errorbar(data=tabla.ind.var,alpha = 2, width=0, size=1,
mapping=aes(ymin = mSD - (SdSd/sqrt(n)),
ymax = mSD + (SdSd/sqrt(n)),
color=condition))+
geom_abline(intercept = 0, slope = 0, linetype=2) +
scale_y_log10(name="Standard deviation (m)\n +/- SEM Intra-subject", breaks=c(0,0.2,0.3,0.4,0.5,0.6), labels=c(0,0.2,0.3,0.4,0.5,0.6), minor_breaks=NULL, limits = c(-1.1,1.85)) +
scale_x_log10(name="Distance source (m)",  breaks=c(2,2.9,4.2,6), labels=c(2,2.9,4.2,6), minor_breaks=NULL, limits = c(1.9,6.1)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f31
## Intra-Sujeto colapsado
f4 <- filter(results_tbl,type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mDist_perc = mean(percived_distance),
mSesgoRel  = mean(rel_bias),
mSD = mean(perc_dist_sd))  %>%
ungroup() %>%
ggplot(aes(x = condition,y = 100*mSD, colour = condition, fill = condition)) +
geom_point(alpha = 0.4,
position = position_jitterdodge(jitter.width = .3,
jitter.height = 0,
dodge.width = 1 )) +
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
stat_summary(fun.data = "mean_se",
geom = "bar",
alpha = .4,
position = position_dodge(width = 1)) +
stat_summary(fun.data = "mean_se",
geom = "linerange",
size=2,
position = position_dodge(width = 1)) +
labs(x = "Condition",
y = "Collapsed standard\ndeviation [%] Intra-subject") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f4
## Intra-Sujeto colapsado
f4 <- results_tbl %>%
group_by(subject,condition,type) %>%
summarise(mDist_perc = mean(percived_distance),
mSesgoRel  = mean(rel_bias),
mSD = mean(perc_dist_sd))  %>%
ungroup() %>%
ggplot(aes(x = condition,y = 100*mSD, colour = condition, fill = condition)) +
geom_point(alpha = 0.4,
position = position_jitterdodge(jitter.width = .3,
jitter.height = 0,
dodge.width = 1 )) +
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
stat_summary(fun.data = "mean_se",
geom = "bar",
alpha = .4,
position = position_dodge(width = 1)) +
stat_summary(fun.data = "mean_se",
geom = "linerange",
size=2,
position = position_dodge(width = 1)) +
facet_grid(.~ type )+
labs(x = "Condition",
y = "Collapsed standard\ndeviation [%] Intra-subject") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f4
# Response variability
## Intra-subject
tabla.ind.var <- filter(results_tbl) %>%
group_by(target_distance,condition,type) %>%
summarise(mSD = mean(perc_dist_sd/target_distance),
SdSd = sd(perc_dist_sd/target_distance),
n = n())  %>%
ungroup()
f3 <- ggplot(tabla.ind.var, aes(x=target_distance, y =mSD, group = condition, color = condition)) +
geom_point()+
geom_line(size = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_errorbar(data=tabla.ind.var,alpha = 2, width=0, size=1,
mapping=aes(ymin = mSD - (SdSd/sqrt(n)),
ymax = mSD + (SdSd/sqrt(n)),
color=condition))+
geom_abline(intercept = 0, slope = 0, linetype=2) +
facet_grid(.~ type )+
scale_y_log10(name="Standard deviation (m)\n +/- SEM Intra-subject", breaks=c(0,0.2,0.3,0.4,0.5,0.6), labels=c(0,0.2,0.3,0.4,0.5,0.6), minor_breaks=NULL, limits = c(-1.1,1.85)) +
scale_x_log10(name="Distance source (m)",  breaks=c(2,2.9,4.2,6), labels=c(2,2.9,4.2,6), minor_breaks=NULL, limits = c(1.9,6.1)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f3
## Intra-Sujeto colapsado
f4 <- results_tbl %>%
group_by(subject,condition,type) %>%
summarise(mDist_perc = mean(percived_distance),
mSesgoRel  = mean(rel_bias),
mSD = mean(perc_dist_sd/target_distance))  %>%
ungroup() %>%
ggplot(aes(x = condition,y = 100*mSD, colour = condition, fill = condition)) +
geom_point(alpha = 0.4,
position = position_jitterdodge(jitter.width = .3,
jitter.height = 0,
dodge.width = 1 )) +
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
stat_summary(fun.data = "mean_se",
geom = "bar",
alpha = .4,
position = position_dodge(width = 1)) +
stat_summary(fun.data = "mean_se",
geom = "linerange",
size=2,
position = position_dodge(width = 1)) +
facet_grid(.~ type )+
labs(x = "Condition",
y = "Collapsed standard\ndeviation [%] Intra-subject") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f4
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "VariabilitiColapsaado", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f4, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
tablaV <- results_tbl %>%
group_by(subject,condition,type) %>%
summarise(mDist_perc = mean(percived_distance),
mSesgoRel  = mean(rel_bias),
mSD = mean(perc_dist_sd/target_distance))  %>%
ungroup()
t.test(filter(tablaV,
condition=="Ear level" & type=="NORMAL")$mSD,
filter(tablaV,
condition=="Floor level" & type=="NORMAL")$mSD,
paired = TRUE)
t.test(filter(tablaV,
condition=="Ear level" & type=="ROVED")$mSD,
filter(tablaV,
condition=="Floor level" & type=="ROVED")$mSD,
paired = TRUE)
View(tablaV)
# Response variability
## Intra-subject
tabla.ind.var <- filter(results_tbl) %>%
group_by(target_distance,condition,type) %>%
summarise(mSD = mean(perc_dist_sd/target_distance),
SdSd = sd(perc_dist_sd/target_distance),
n = n())  %>%
ungroup()
f3 <- ggplot(tabla.ind.var, aes(x=target_distance, y =mSD, group = condition, color = condition)) +
geom_point()+
geom_line(size = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_errorbar(data=tabla.ind.var,alpha = 2, width=0, size=1,
mapping=aes(ymin = mSD - (SdSd/sqrt(n)),
ymax = mSD + (SdSd/sqrt(n)),
color=condition))+
geom_abline(intercept = 0, slope = 0, linetype=2) +
facet_grid(.~ type )+
scale_y_log10(name="Standard deviation (m)\n +/- SEM Intra-subject", breaks=c(0,0.2,0.3,0.4,0.5,0.6), labels=c(0,0.2,0.3,0.4,0.5,0.6), minor_breaks=NULL, limits = c(-1.1,1.85)) +
scale_x_log10(name="Distance source (m)",  breaks=c(2,2.9,4.2,6), labels=c(2,2.9,4.2,6), minor_breaks=NULL, limits = c(1.9,6.1)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f3
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "VariabilitiINDIDISTANCE", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
