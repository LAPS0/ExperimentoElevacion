data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "fontname", cs.family = "Arial")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "fontname", cs.family = "Time Now Roman")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "fontname", cs.family = "Time Now Roman")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "fontname", cs.family = "Arabic")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "+font-family: Arabic;", cs.family = "Arabic")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "Time")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "Time")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "Time")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "+font-family: Arial;", cs.family = "Arabic")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
save_as_image(anov,"anov_PAD_POB4.png")
library(officer)
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "+font-family: Arial;")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
style(pr_t = fp_text(font.family = "Time New Roman"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
style(pr_t = fp_text(font.family = "Time New Roman"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
style(pr_t = fp_text(font.family = "Arabic"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
style(pr_t = fp_text(font.family = "Rage Italic"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
style(pr_t = fp_text(font.family = "Rage Italic"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
style(i=1,j=2,pr_t = fp_text(font.family = "Rage Italic"))%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
style(i=1,j=2,pr_t = fp_text(font.family = "Rage Italic"))%>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
#   font(fontname = "+font-family: Arial;")%>%
# font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
m.Dist1 <-  lme(perc_dist ~ target_distance*condition, random = ~target_distance|subject,
method = "ML", control =list(msMaxIter = 1000, msMaxEval = 1000),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist1))
anova(m.Dist1)
anov = anova(m.Dist1)
p_val_format <- function(x){
z <- scales::pvalue_format()(x)
z[!is.finite(x)] <- ""
z
}
anov$Predictors = c("Intercept","Target distance","Condition","Target distance:Condition")
anov = data.frame(anov)
anov <- flextable(anov,col_keys = c("Predictors", "numDF", "denDF", "F.value","p.value")) %>%
hline_top(border = fp_border(color="black", width = .5), part = "all")%>%
hline_bottom(border = fp_border(color="black", width = .5))%>%
width(j = 1, width = 5, unit = "cm")%>%
align(align = "center", part = "all")%>%
align(j = 1, align = "left", part = "all")%>%
colformat_double(digits = 1, na_str = "N/A")%>%
set_formatter(values = list("p.value" = p_val_format) )%>%
font(fontname = "+font-family: Arial;")%>%
font(fontname = "+font-family: Arial;", part = "header")%>%
fontsize(size = 10.5, part = "header")%>%
fontsize(size = 10.5)%>%
bold(j = "p.value", bold = TRUE)%>%
italic(italic = TRUE, part = "header")%>%
line_spacing(space = 1, part = "body")%>%
line_spacing(space = .5, part = "header")
anov
save_as_image(anov,"anov_PAD_POB.png")
