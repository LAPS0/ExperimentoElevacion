scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
#Distance
#percived_distance and target_distance lin
m.Dist.lin <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "NORMAL"))
m.Dist.lin
anova(m.Dist.lin,m.Dist.log)
library(tidyverse)
library(lme4)
library(janitor)
library(nlme)
library(lmerTest)
library(emmeans)
library(jtools)
library(broom)
library(ggstatsplot)
library(gmodels)
setwd("~/GitHub/ExperimentoElevacion/AnalisisDatos")
library(tidyverse)
library(lme4)
library(janitor)
library(nlme)
library(lmerTest)
library(emmeans)
library(jtools)
library(broom)
library(ggstatsplot)
library(gmodels)
library(ggpubr)
library(Routliers)
rm(list=ls())
tabla.raw <- read.csv("./DatosUnificados/datacrudafinal2.csv", header = TRUE, sep = ';', stringsAsFactors = TRUE)
tabla.raw$abs_bias <-  tabla.raw$percived_distance - tabla.raw$target_distance
tabla.raw$rel_bias <- (tabla.raw$percived_distance - tabla.raw$target_distance) / tabla.raw$target_distance
idx = tabla.raw$subject == "13" | tabla.raw$percived_distance == 0.05
tabla.raw[idx,]$percived_distance = 0.5
f_promedio <- function(x) c(mean = mean(x),
sd   = sd(x),
var  = var(x),
sem  = sd(x)/sqrt(length(x)),
n    = length(x))
results_tbl <- tibble(aggregate(cbind(percived_distance,rel_bias,abs_bias) ~ subject*block*condition*target_distance*type,
data = tabla.raw,
FUN  = f_promedio,na.action = NULL))
results_tbl %>%
clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = rel_bias[,"sd"],
rel_bias_signed_sem = rel_bias[,"sem"],
rel_bias_signed_var = rel_bias[,"var"],
rel_bias_signed_n = rel_bias[,"n"],
rel_bias_signed = rel_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
write_csv("./DatosUnificados/results.csv")
results_tbl <- read.csv("./DatosUnificados/results.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
tabla.ind.Eye <- results_tbl %>%
filter(condition == "Ear level", type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mSesgoRel  = mean(rel_bias,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Eye$mSesgoRel ,na.rm=TRUE)
#plot_outliers_mad(res3,x=tabla.ind.Eye$mSesgoRel,pos_display=TRUE)
tabla.ind.Eye[res3$outliers_pos,]
tabla.ind.Floor <- results_tbl %>%
filter(condition == "Floor level", type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mSesgoRel  = mean(rel_bias,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Floor$mSesgoRel ,na.rm=TRUE)
#plot_outliers_mad(res3,x=tabla.ind.Floor$mSesgoRel,pos_display=TRUE)
tabla.ind.Floor[res3$outliers_pos,]
tabla.ind.Eye <- results_tbl %>%
filter(condition == "Ear level", type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mSesgoAbs  = mean(abs_bias,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Eye$mSesgoAbs ,na.rm=TRUE)
#plot_outliers_mad(res3,x=tabla.ind.Eye$mSesgoAbs,pos_display=TRUE)
tabla.ind.Eye[res3$outliers_pos,]
tabla.ind.Floor <- results_tbl %>%
filter(condition == "Floor level", type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mSesgoAbs  = mean(abs_bias,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Floor$mSesgoAbs ,na.rm=TRUE)
#plot_outliers_mad(res3,x=tabla.ind.Floor$mSesgoAbs,pos_display=TRUE)
tabla.ind.Floor[res3$outliers_pos,]
idx = results_tbl$subject == "S003"
results_tbl = results_tbl[!idx,]
idx = results_tbl$subject == "S012"
results_tbl = results_tbl[!idx,]
rm("res3", "tabla.ind.Floor", "tabla.ind.Eye", "tabla.raw")
#Distance
#percived_distance and target_distance lin
m.Dist.lin <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist.lin))
anova(m.Dist.lin)
results_tbl$Predsubject.lin = fitted(m.Dist.lin, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.lin = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.lin = 0.3322*c(2,2.9,4.2,6)+0.9702
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.lin = (0.3322+0.3351)*c(2,2.9,4.2,6)+(0.9702-0.8352)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =PredPob.lin, group = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = PredPob.lin, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=Predsubject.lin, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
figures_folder = "figuras"
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Lineal-Normal", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=fig.1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#--
#percived_distance and target_distance in log10()
results_tbl$percived_distance_log <-  log10(results_tbl$percived_distance)
results_tbl$target_distance_log <-  log10(results_tbl$target_distance)
m.Dist.log <-  lmer(percived_distance_log ~ target_distance_log*condition + (target_distance_log|subject),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist.log))
anova(m.Dist.log)
results_tbl$Predsubject.log = fitted(m.Dist.log, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.log = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.log = 0.61245*log10(c(2,2.9,4.2,6))+(-0.06628)
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.log = (0.61245+0.34018)*log10(c(2,2.9,4.2,6))+(-0.06628-0.11821)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
# scale_x_log10(name="Distance source (m)") +
# scale_y_log10(name="Perceived distance (m)") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Log-Normal", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#--
#percived_distance and target_distance in log10()
results_tbl$percived_distance_log <-  log10(results_tbl$percived_distance)
# ROVED DISTANCE  ------
#Distance
#percived_distance and target_distance lin
m.Dist.lin.r <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.lin.r))
anova(m.Dist.lin.r)
# ROVED DISTANCE  ------
#Distance
#percived_distance and target_distance lin
m.Dist.lin.r <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.lin.r))
anova(m.Dist.lin.r)
results_tbl$Predsubject.lin.r = fitted(m.Dist.lin.r, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.lin.r = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.lin.r = 0.1058*c(2,2.9,4.2,6)+2.0402
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.lin.r = (0.1058+0.3997)*c(2,2.9,4.2,6)+(2.0402-1.3759)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =PredPob.lin.r, group = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = PredPob.lin, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=Predsubject.lin.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Lineal-Roved", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#--
#percived_distance and target_distance in log10()
results_tbl$percived_distance_log <-  log10(results_tbl$percived_distance)
results_tbl$target_distance_log <-  log10(results_tbl$target_distance)
m.Dist.log.r <-  lmer(percived_distance_log ~ target_distance_log*condition + (target_distance_log|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.log.r))
anova(m.Dist.log.r)
results_tbl$Predsubject.log.r = fitted(m.Dist.log.r, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.log.r = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.log.r = 0.2700*log10(c(2,2.9,4.2,6))+(0.1506)
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.log.r = (0.2700+0.5060)*log10(c(2,2.9,4.2,6))+(0.1506-0.2460)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Log-Roved", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_tile("asdasd")
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_tile("asdasd")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_tile(name = "asdasd")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("asdasd")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =PredPob.lin.r, group = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = PredPob.lin, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=Predsubject.lin.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("Lineal Roved")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
# ROVED DISTANCE  ------
#Distance
#percived_distance and target_distance lin
m.Dist.lin.r <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.lin.r))
anova(m.Dist.lin.r)
results_tbl$Predsubject.lin.r = fitted(m.Dist.lin.r, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.lin.r = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.lin.r = 0.1058*c(2,2.9,4.2,6)+2.0402
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.lin.r = (0.1058+0.3997)*c(2,2.9,4.2,6)+(2.0402-1.3759)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =PredPob.lin.r, group = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = PredPob.lin, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=Predsubject.lin.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("Lineal Roved")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Lineal-Roved", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#--
#percived_distance and target_distance in log10()
results_tbl$percived_distance_log <-  log10(results_tbl$percived_distance)
results_tbl$target_distance_log <-  log10(results_tbl$target_distance)
m.Dist.log.r <-  lmer(percived_distance_log ~ target_distance_log*condition + (target_distance_log|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.log.r))
anova(m.Dist.log.r)
results_tbl$Predsubject.log.r = fitted(m.Dist.log.r, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.log.r = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.log.r = 0.2700*log10(c(2,2.9,4.2,6))+(0.1506)
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.log.r = (0.2700+0.5060)*log10(c(2,2.9,4.2,6))+(0.1506-0.2460)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log.r, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log.r, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("Log Roved")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Log-Roved", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#Distance
#percived_distance and target_distance lin
m.Dist.lin <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist.lin))
anova(m.Dist.lin)
results_tbl$Predsubject.lin = fitted(m.Dist.lin, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.lin = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.lin = 0.3322*c(2,2.9,4.2,6)+0.9702
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.lin = (0.3322+0.3351)*c(2,2.9,4.2,6)+(0.9702-0.8352)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =PredPob.lin, group = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = PredPob.lin, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=Predsubject.lin, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("Lineal Normal")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Lineal-Normal", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
#--
#percived_distance and target_distance in log10()
results_tbl$percived_distance_log <-  log10(results_tbl$percived_distance)
results_tbl$target_distance_log <-  log10(results_tbl$target_distance)
m.Dist.log <-  lmer(percived_distance_log ~ target_distance_log*condition + (target_distance_log|subject),
data = filter(results_tbl,type == "NORMAL"))
extract_stats(ggcoefstats(m.Dist.log))
anova(m.Dist.log)
results_tbl$Predsubject.log = fitted(m.Dist.log, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.log = 0
idx = tabla.pob$condition == "Ear level"
tabla.pob[idx,]$PredPob.log = 0.61245*log10(c(2,2.9,4.2,6))+(-0.06628)
idx = tabla.pob$condition == "Floor level"
tabla.pob[idx,]$PredPob.log = (0.61245+0.34018)*log10(c(2,2.9,4.2,6))+(-0.06628-0.11821)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
f1 <- ggplot(tabla.pob, aes(x=target_distance, y =10^PredPob.log, group = condition, fill = condition, color  = condition)) +
geom_line(size = 2)+
# geom_line(data = results_tbl, aes(x=target_distance, y = 10^PredPob, color = condition), size = 1.5) +
geom_abline(intercept = 0, slope = 1, linetype=2) +
geom_line(data = filter(results_tbl,type == "NORMAL"), mapping = aes(x=target_distance, y=10^Predsubject.log, group = interaction(subject,condition)) ,
alpha=.4, size=0.4)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
ggtitle("Log Normal")+
#geom_text(x = .5, y = .9, label = as.character(as.expression(eq1)), parse = TRUE, size = 4, color = "#000000")+
#geom_text(x = .5, y = .76, label = as.character(as.expression(eq2)), parse = TRUE, size = 4, color = "#E69F00")+
scale_x_continuous(name="Distance source (m)", breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",  breaks=c(0,2,2.9,4.2,6,7), labels=c("",2,2.9,4.2,6,""), minor_breaks=NULL, limits = c(0,8)) +
# scale_x_log10(name="Distance source (m)") +
# scale_y_log10(name="Perceived distance (m)") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
f1
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "Log-Normal", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f1, width=15, height=15, units="cm", limitsize=FALSE, dpi=600)
# ROVED DISTANCE  ------
#Distance
#percived_distance and target_distance lin
m.Dist.lin.r <-  lmer(percived_distance ~ target_distance*condition + (target_distance|subject),
data = filter(results_tbl,type == "ROVED"))
extract_stats(ggcoefstats(m.Dist.lin.r))
anova(m.Dist.lin.r)
results_tbl$Predsubject.lin.r = fitted(m.Dist.lin.r, level=1)
tabla.pob = filter(results_tbl,type == "NORMAL") %>% group_by(target_distance,condition) %>%
summarise(Mperc_dist  = mean(percived_distance))  %>%
ungroup()
tabla.pob$PredPob.lin.r = 0
idx = tabla.pob$condition == "Ear level"
