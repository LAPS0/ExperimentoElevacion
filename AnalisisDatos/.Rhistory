SDBiasSigned  = sd(mBiasSigned,na.rm=TRUE)/sqrt(length(mBiasSigned)),
MBiasUnSigned  = mean(mBiasUnSigned,na.rm=TRUE),
SDBiasUnSigned  = sd(mBiasUnSigned,na.rm=TRUE)/sqrt(length(mBiasUnSigned)))  %>%
ungroup()
f7 =  ggplot(results_tblp, aes(x = condition,y = MBiasSigned, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=MBiasSigned, ymin=MBiasSigned-SDBiasSigned, ymax=MBiasSigned+SDBiasSigned),
position = position_dodgenudge(direction = "split", width = 3.2), size = 1.2, shape = 0)+
geom_line(position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_line(data = results_tbls, mapping = aes(x = condition,y = mBiasSigned, group = subject, colour = condition, fill = condition),alpha = 0.6)+
geom_point(data = results_tbls, mapping = aes(x = condition,y = mBiasSigned, colour = condition, fill = condition), size = 2.4, alpha = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Signed bias") +
# facet_grid(. ~ type) +
# annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
# annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
# Unsigned
f8 =  ggplot(results_tblp, aes(x = condition,y = MBiasUnSigned, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=MBiasUnSigned, ymin=MBiasUnSigned-SDBiasSigned, ymax=MBiasUnSigned+SDBiasSigned),
position = position_dodgenudge(direction = "split", width = 3.2), size = 1.2, shape = 0)+
geom_line(position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_line(data = results_tbls, mapping = aes(x = condition,y = mBiasUnSigned, group = subject, colour = condition, fill = condition),alpha = 0.6)+
geom_point(data = results_tbls, mapping = aes(x = condition,y = mBiasUnSigned, colour = condition, fill = condition), size = 2.4, alpha = 1)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
# geom_abline(slope = 0,
#             intercept = 0,
#             alpha = 0.5,
#             linetype = "dashed") +
labs(x = "Condicion",
y = "Unsigned bias") +
ylim(c(0,1.11))+
# facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 1,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = .95, yend = .95, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
Figure2 = ggarrange(f5,
f6+rremove("x.text")+rremove("x.title"),
f7+rremove("x.text")+rremove("x.title"),
f8+rremove("x.text")+rremove("x.title"),
# ncol = 3, nrow = 1,labels = c("B", "C", "D"),
# common.legend = FALSE, legend="none", align = "h")+theme(plot.margin = unit(c(-10,0,-50,0), 'cm')),
heights = c(1, 1),
ncol = 2, nrow = 2,labels = c("A", "B","C","D"),
common.legend = TRUE, legend="top", align = "hv")
Figure2
mi_nombre_de_archivo = paste("figuras", .Platform$file.sep, "FIG2. Experimento2", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=Figure2, width=18, height=15, units="cm", limitsize=FALSE, dpi=600)
library(tidyverse)
library(ggpubr)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
#NORMAL ----
results_tbl$slope = 0
results_tbl$intercepto = 0
fig_normal = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(perc_dist ~ target_distance*condition,
data = filter(results_tbl,type == "NORMAL", subject == sub))
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$slope = m.pend$coefficients[[2]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$intercepto = m.pend$coefficients[[1]]
results_tbl[(results_tbl$type == "NORMAL" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$intercepto = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]],digits = 2),
b = round(m.pend$coefficients[[1]], digits = 2)))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]]+m.pend$coefficients[[4]], digits = 2),
b = round(m.pend$coefficients[[1]]+m.pend$coefficients[[3]], digits = 2)))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = round(summary(m.pend)$r.squared, digits = 2)))
fig1 = ggplot(filter(results_tbl,type == "NORMAL", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 0.2, y = 7.6, label = sub, hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#999999")+
geom_text(x = 0.2, y = 6.6, label = as.character(as.expression(eq1)), hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#000000")+
geom_text(x = 0.2, y = 5.6, label = as.character(as.expression(eq2)), hjust = 0, nudge_x =  0,parse = TRUE, size = 3.2, color = "#E69F00")+
geom_text(x = 0.2, y = 4.6, label = as.character(as.expression(eq3)), hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig_normal[[i]] = fig1
}
Figure1 = ggarrange(fig_normal[[1]],fig_normal[[2]],fig_normal[[3]],fig_normal[[4]],fig_normal[[5]],fig_normal[[6]],fig_normal[[7]],fig_normal[[8]],fig_normal[[9]],
fig_normal[[10]],fig_normal[[11]],fig_normal[[12]],fig_normal[[13]],fig_normal[[14]],fig_normal[[15]],fig_normal[[16]],fig_normal[[17]],fig_normal[[18]],
fig_normal[[19]],fig_normal[[20]],
ncol = 4, nrow = 6,
common.legend = TRUE, legend="top", align = "hv")
#Figure1
mi_nombre_de_archivo = paste("figuras", .Platform$file.sep, "1. Lm for subject NORMAL", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=Figure1, width=20, height=25, units="cm", limitsize=FALSE, dpi=600)
# ROVED ----
fig_roved = list()
for (i in 1:length(levels(results_tbl$subject))) {
print(i)
sub = levels(results_tbl$subject)[i]
print(sub)
m.pend = lm(perc_dist ~ target_distance*condition,
data = filter(results_tbl,type == "ROVED", subject == sub))
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$slope = m.pend$coefficients[[2]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Ear level"),]$intercepto = m.pend$coefficients[[1]]
results_tbl[(results_tbl$type == "ROVED" & results_tbl$subject == sub &results_tbl$condition == "Floor level"),]$intercepto = m.pend$coefficients[[1]]+m.pend$coefficients[[3]]
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
eq1 <- substitute("Ear level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]],digits = 2),
b = round(m.pend$coefficients[[1]], digits = 2)))
eq2 <- substitute("Floor level:"~~~italic(y) == a %.% italic(X)+italic((b)),
list(a = round(m.pend$coefficients[[2]]+m.pend$coefficients[[4]], digits = 2),
b = round(m.pend$coefficients[[1]]+m.pend$coefficients[[3]], digits = 2)))
eq3 <- substitute("r.squared:"~~~italic(R)^italic(2) == italic(b),
list(b = round(summary(m.pend)$r.squared, digits = 2)))
fig2 = ggplot(filter(results_tbl,type == "ROVED", subject == sub),
aes(x = target_distance, y = perc_dist, ymin = perc_dist-perc_dist_sem, ymax = perc_dist+perc_dist_sem,
colour = condition, fill = condition, group = condition))+
geom_pointrange(alpha = 0.4,
position = position_jitterdodge(jitter.width = .1,
jitter.height = 0,
dodge.width = .1 ))+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 1,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
geom_abline(slope = m.pend$coefficients[[2]],
intercept = m.pend$coefficients[[1]],
alpha = 0.5,
color = "#000000") +
geom_abline(slope = m.pend$coefficients[[2]]+m.pend$coefficients[[4]],
intercept = m.pend$coefficients[[1]]+m.pend$coefficients[[3]],
alpha = 0.5,
color = "#E69F00") +
geom_text(x = 0.2, y = 7.6, label = sub, hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#999999")+
geom_text(x = 0.2, y = 6.6, label = as.character(as.expression(eq1)), hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#000000")+
geom_text(x = 0.2, y = 5.6, label = as.character(as.expression(eq2)), hjust = 0, nudge_x =  0,parse = TRUE, size = 3.2, color = "#E69F00")+
geom_text(x = 0.2, y = 4.6, label = as.character(as.expression(eq3)), hjust = 0, nudge_x =  0, parse = TRUE, size = 3.2, color = "#009E73")+
scale_x_continuous(name="Distance source (m)", limits = c(0,8)) +
scale_y_continuous(name="Perceived distance (m)",   limits = c(0,8)) +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "top",
legend.title = element_blank())
fig_roved[[i]] = fig2
}
Figure2 = ggarrange(fig_roved[[1]],fig_roved[[2]],fig_roved[[3]],fig_roved[[4]],fig_roved[[5]],fig_roved[[6]],fig_roved[[7]],fig_roved[[8]],fig_roved[[9]],
fig_roved[[10]],fig_roved[[11]],fig_roved[[12]],fig_roved[[13]],fig_roved[[14]],fig_roved[[15]],fig_roved[[16]],fig_roved[[17]],fig_roved[[18]],
fig_roved[[19]],fig_roved[[20]],
ncol = 4, nrow = 6,
common.legend = TRUE, legend="top", align = "hv")
mi_nombre_de_archivo = paste("figuras", .Platform$file.sep, "2. Lm for subject ROVED", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=Figure2, width=20, height=25, units="cm", limitsize=FALSE, dpi=600)
# Write_csv with SLOPE AND INTERCEPTO
write_csv(results_tbl, "./DatosUnificados/Dresults_without_outliers_slope_and_intercepto.csv")
library(tidyverse)
library(lme4)
library(nlme)
library(sjPlot)
library(MuMIn)
library(ggstatsplot)
library(ggpubr)
library(ggpp)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
results_tblp <- results_tbl %>%
group_by(condition, type) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
f3 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = slope, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = slope, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Slope with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")+
theme(plot.margin = unit(c(0,0.2,0,1), 'lines'))
f3
library(tidyverse)
library(lme4)
library(nlme)
library(sjPlot)
library(MuMIn)
library(ggstatsplot)
library(ggpubr)
library(ggpp)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
results_tblp <- results_tbl %>%
group_by(condition, type) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
f3 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = slope, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = slope, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Slope with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")+
theme(plot.margin = unit(c(0,0.2,0,1), 'lines'))
f3
mi_nombre_de_archivo = paste(figures_folder, .Platform$file.sep, "9. Lm Slope", ".png", sep = '')
ggsave(mi_nombre_de_archivo, plot=f3, width=15, height=10, units="cm", limitsize=FALSE, dpi=600)
t.test(filter(results_tbl,
condition=="Ear level" & type=="NORMAL")$slope,
filter(results_tbl,
condition=="Floor level" & type=="NORMAL")$slope,
paired = TRUE)
aaa <- filter(results_tbl,type == "NORMAL") %>%
group_by(subject,condition) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
m.RelativBias <- lm(mslope ~ condition,
data = aaa)
extract_stats(ggcoefstats(m.RelativBias))
anova(m.RelativBias)
f4 =  ggplot(results_tblp, aes(x = condition,y = mintercepto, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mintercepto, ymin=mintercepto-SDintercepto, ymax=mintercepto+SDintercepto),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = intercepto, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = intercepto, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
# stat_summary(fun.data = "mean_se",
#              geom = "pointrange",
#              alpha = 1,
#              size = 1,
#              # position = position_dodge(width = 1)
#              position = position_jitterdodge(jitter.width = 0.6,
#                                              jitter.height = 0,
#                                              dodge.width = 0 )) +
# stat_summary(fun.data = "mean_se",
#              geom = "linerange",
#              size=2,
#              position = position_dodge(width = 1)) +
labs(x = "Condition",
y = "Intercepto with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 8,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 7.9, yend = 7.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")+
theme(plot.margin = unit(c(0,0.2,0,1), 'lines'))
f4
a = results_tbl[results_tbl$target_distance == 6,]
b = results_tbl[results_tbl$target_distance == 2,]
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblp <- results_tblrange %>%
group_by(condition, type) %>%
summarise(mslope  = mean(range,na.rm=TRUE),
SDslope  = sd(range,na.rm=TRUE)/sqrt(length(range)))  %>%
ungroup()
f5 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2, alpha=.5,shape = 0)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2)+
geom_point(data = results_tblrange, mapping = aes(x = condition,y = range, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tblrange, mapping = aes(x = condition,y = range, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Range rate") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f5
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
results_tblp <- results_tbl %>%
group_by(condition, type) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
f3 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2, alpha=.5)+
geom_point(data = results_tbl, mapping = aes(x = condition,y = slope, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tbl, mapping = aes(x = condition,y = slope, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Slope with LM") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")+
theme(plot.margin = unit(c(0,0.2,0,1), 'lines'))
f3
a = results_tbl[results_tbl$target_distance == 6,]
b = results_tbl[results_tbl$target_distance == 2,]
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblp <- results_tblrange %>%
group_by(condition, type) %>%
summarise(mslope  = mean(range,na.rm=TRUE),
SDslope  = sd(range,na.rm=TRUE)/sqrt(length(range)))  %>%
ungroup()
f5 =  ggplot(results_tblp, aes(x = condition,y = mslope, colour = condition, fill = condition)) +
geom_pointrange(aes(x=condition, y=mslope, ymin=mslope-SDslope, ymax=mslope+SDslope),
position = position_dodgenudge(direction = "split", width = 3), size = 1.2, alpha=.5,shape = 0)+
geom_line(aes(group = type),position = position_dodgenudge(direction = "split", width = 3),size = 1.2)+
geom_point(data = results_tblrange, mapping = aes(x = condition,y = range, colour = condition, fill = condition), alpha = .8)+
geom_line(data = results_tblrange, mapping = aes(x = condition,y = range, group = subject, colour = condition, fill = condition),alpha = 0.3)+
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
labs(x = "Condition",
y = "Range rate") +
facet_grid(. ~ type) +
annotate("text", x = 1.5, y = 2,  label = "***", size = 4) +
annotate("segment", x = 1, xend = 2, y = 1.9, yend = 1.9, colour = "black", size=.5, alpha=1,)+
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f5
library(tidyverse)
library(lme4)
library(nlme)
library(sjPlot)
library(MuMIn)
library(ggstatsplot)
library(ggpubr)
library(ggpp)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
a = results_tbl[results_tbl$target_distance == 6,]
b = results_tbl[results_tbl$target_distance == 2,]
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tbl)
results_tbl[results_tbl$target_distance == 6,]
results_tbl[results_tbl$target_distance == 6,]$perc_dist
results_tbl[results_tbl$target_distance == 2,]$perc_dist
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
View(results_tblrange)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
results_tblp <- results_tbl %>%
group_by(condition, type) %>%
summarise(mslope  = mean(slope,na.rm=TRUE),
SDslope  = sd(slope,na.rm=TRUE),
mintercepto  = mean(intercepto,na.rm=TRUE),
SDintercepto  = sd(intercepto,na.rm=TRUE),)  %>%
ungroup()
results_tblrange <- results_tbl %>%
group_by(condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
a = results_tbl[results_tbl$target_distance == 6,]
b = results_tbl[results_tbl$target_distance == 2,]
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblp <- results_tblrange %>%
group_by(condition, type) %>%
summarise(mslope  = mean(range,na.rm=TRUE),
SDslope  = sd(range,na.rm=TRUE)/sqrt(length(range)))  %>%
ungroup()
View(results_tblp)
View(results_tbl)
rm(list=ls())
figures_folder = "figuras"
results_tbl <- read.csv("./DatosUnificados/Dresults_without_outliers_slope_and_intercepto_lin_log.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
View(results_tbl)
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
reframe(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
reframe(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
results_tblrange <- results_tbl %>%
group_by(subject) %>%
reframe(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
results_tblrange <- results_tbl %>%
group_by(subject) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
summarise(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
results_tblrange <- results_tbl %>%
group_by(subject,condition, type) %>%
reframe(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
results_tblrange <- results_tbl %>%
group_by(target_distance,condition, type) %>%
reframe(range  = results_tbl[results_tbl$target_distance == 6,]$perc_dist-results_tbl[results_tbl$target_distance == 2,]$perc_dist)  %>%
ungroup()
View(results_tblrange)
