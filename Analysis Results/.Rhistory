condicion == 0 ~ "NORMAL",
condicion == 2 ~ "ROVED"
))
tabla.raw <- tabla.raw%>%
mutate(condition = case_when(
altura == 0 ~ "Floor level",
altura == 1 ~ "Ear level"
))
tabla.raw <- tabla.raw%>%
mutate(subject = case_when(
nsub == 1 ~ "T001",
nsub == 2 ~ "T001",
nsub == 3 ~ "T001",
nsub == 4 ~ "T001",
nsub == 5 ~ "T001",
nsub == 6 ~ "T001",
nsub == 7 ~ "T001",
nsub == 8 ~ "T001",
nsub == 9 ~ "T001",
nsub == 10 ~ "T001",
nsub == 11 ~ "T001",
nsub == 12 ~ "T001",
nsub == 13 ~ "T001"
))
tabla.raw = tabla.raw %>% rename(block = bloque)   # renombro columnas
tabla.raw = tabla.raw %>% rename(trial = itrial)   # renombro columnas
tabla.raw = tabla.raw %>% rename(percived_distance = respuesta)   # renombro columnas
tabla.raw = tabla.raw %>% rename(target_distance = distancia)   # renombro columnas
tabla.raw <- tabla.raw[ , !(names(tabla.raw) %in% c("nsub","altura","condicion"))]
tabla.raw$location = "sitting"
tabla.raw2 <- read.csv("./DatosUnificados/datacrudafinal2.csv", header = TRUE, sep = ';', stringsAsFactors = TRUE)
tabla.raw2$location = "standing"
tabla.raw = merge(x = tabla.raw, y = tabla.raw2, all = TRUE)
View(tabla.raw)
tabla.raw$abs_bias <-  tabla.raw$percived_distance - tabla.raw$target_distance
tabla.raw$signed_bias <- (tabla.raw$percived_distance - tabla.raw$target_distance) / tabla.raw$target_distance
tabla.raw$unsigned_bias <- abs(tabla.raw$signed_bias)
idx = tabla.raw$subject == "S013" | tabla.raw$percived_distance == 0.05
tabla.raw[idx,]$percived_distance = 0.5
f_promedio <- function(x) c(mean = mean(x),
sd   = sd(x),
var  = var(x),
sem  = sd(x)/sqrt(length(x)),
n    = length(x))
results_tbl <- tibble(aggregate(cbind(percived_distance,signed_bias,unsigned_bias,abs_bias) ~ subject*block*condition*target_distance*type,
data = tabla.raw,
FUN  = f_promedio,na.action = NULL))
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
rm(list=ls())
figures_folder = "figuras"
#Data entry -----
rm(list=ls())
figures_folder = "figuras"
data_folder         = "./DatosUnificados/Datos nuevos sentados"
cat('/* Importando datos desde la carpeta \'', data_folder, '\':\n', sep = '')
c <- 0
for (archivo in dir(data_folder, pattern = '*.csv')) {
ruta_completa <- paste(data_folder, .Platform$file.sep, archivo, sep = '')
cat('- Cargando archivo: \'', ruta_completa, '\'\n', sep = '')
tabla_temp <- read.csv(ruta_completa, header = TRUE, sep = ',', stringsAsFactors = TRUE)
if (c == 0)
tabla.raw <- tabla_temp
else
tabla.raw <- rbind(tabla.raw, tabla_temp)
c <- c + 1
}
rm("c", "tabla_temp", "archivo", "ruta_completa")
tabla.raw <- tabla.raw%>%
mutate(type = case_when(
condicion == 0 ~ "NORMAL",
condicion == 2 ~ "ROVED"
))
tabla.raw <- tabla.raw%>%
mutate(condition = case_when(
altura == 0 ~ "Floor level",
altura == 1 ~ "Ear level"
))
tabla.raw <- tabla.raw%>%
mutate(subject = case_when(
nsub == 1 ~ "T001",
nsub == 2 ~ "T001",
nsub == 3 ~ "T001",
nsub == 4 ~ "T001",
nsub == 5 ~ "T001",
nsub == 6 ~ "T001",
nsub == 7 ~ "T001",
nsub == 8 ~ "T001",
nsub == 9 ~ "T001",
nsub == 10 ~ "T001",
nsub == 11 ~ "T001",
nsub == 12 ~ "T001",
nsub == 13 ~ "T001"
))
tabla.raw = tabla.raw %>% rename(block = bloque)   # renombro columnas
tabla.raw = tabla.raw %>% rename(trial = itrial)   # renombro columnas
tabla.raw = tabla.raw %>% rename(percived_distance = respuesta)   # renombro columnas
tabla.raw = tabla.raw %>% rename(target_distance = distancia)   # renombro columnas
tabla.raw <- tabla.raw[ , !(names(tabla.raw) %in% c("nsub","altura","condicion"))]
tabla.raw$location = "sitting"
tabla.raw2 <- read.csv("./DatosUnificados/datacrudafinal2.csv", header = TRUE, sep = ';', stringsAsFactors = TRUE)
tabla.raw2$location = "standing"
rm("tabla.raw2")
tabla.raw$abs_bias <-  tabla.raw$percived_distance - tabla.raw$target_distance
tabla.raw$signed_bias <- (tabla.raw$percived_distance - tabla.raw$target_distance) / tabla.raw$target_distance
tabla.raw$unsigned_bias <- abs(tabla.raw$signed_bias)
idx = tabla.raw$subject == "S013" | tabla.raw$percived_distance == 0.05
tabla.raw[idx,]$percived_distance = 0.5
f_promedio <- function(x) c(mean = mean(x),
sd   = sd(x),
var  = var(x),
sem  = sd(x)/sqrt(length(x)),
n    = length(x))
results_tbl <- tibble(aggregate(cbind(percived_distance,signed_bias,unsigned_bias,abs_bias) ~ subject*block*condition*target_distance*type*location,
data = tabla.raw,
FUN  = f_promedio,na.action = NULL))
View(results_tbl)
rm(list=ls())
figures_folder = "figuras"
#Data entry -----
rm(list=ls())
figures_folder = "figuras"
data_folder         = "./DatosUnificados/Datos nuevos sentados"
cat('/* Importando datos desde la carpeta \'', data_folder, '\':\n', sep = '')
c <- 0
for (archivo in dir(data_folder, pattern = '*.csv')) {
ruta_completa <- paste(data_folder, .Platform$file.sep, archivo, sep = '')
cat('- Cargando archivo: \'', ruta_completa, '\'\n', sep = '')
tabla_temp <- read.csv(ruta_completa, header = TRUE, sep = ',', stringsAsFactors = TRUE)
if (c == 0)
tabla.raw <- tabla_temp
else
tabla.raw <- rbind(tabla.raw, tabla_temp)
c <- c + 1
}
rm("c", "tabla_temp", "archivo", "ruta_completa")
tabla.raw <- tabla.raw%>%
mutate(type = case_when(
condicion == 0 ~ "NORMAL",
condicion == 2 ~ "ROVED"
))
tabla.raw <- tabla.raw%>%
mutate(condition = case_when(
altura == 0 ~ "Floor level",
altura == 1 ~ "Ear level"
))
tabla.raw <- tabla.raw%>%
mutate(subject = case_when(
nsub == 1 ~ "T001",
nsub == 2 ~ "T001",
nsub == 3 ~ "T001",
nsub == 4 ~ "T001",
nsub == 5 ~ "T001",
nsub == 6 ~ "T001",
nsub == 7 ~ "T001",
nsub == 8 ~ "T001",
nsub == 9 ~ "T001",
nsub == 10 ~ "T001",
nsub == 11 ~ "T001",
nsub == 12 ~ "T001",
nsub == 13 ~ "T001"
))
tabla.raw = tabla.raw %>% rename(block = bloque)   # renombro columnas
tabla.raw = tabla.raw %>% rename(trial = itrial)   # renombro columnas
tabla.raw = tabla.raw %>% rename(percived_distance = respuesta)   # renombro columnas
tabla.raw = tabla.raw %>% rename(target_distance = distancia)   # renombro columnas
tabla.raw <- tabla.raw[ , !(names(tabla.raw) %in% c("nsub","altura","condicion"))]
tabla.raw$location = "sitting"
tabla.raw2 <- read.csv("./DatosUnificados/datacrudafinal2.csv", header = TRUE, sep = ';', stringsAsFactors = TRUE)
tabla.raw2$location = "standing"
tabla.raw = merge(x = tabla.raw, y = tabla.raw2, all = TRUE)
rm("tabla.raw2")
tabla.raw$abs_bias <-  tabla.raw$percived_distance - tabla.raw$target_distance
tabla.raw$signed_bias <- (tabla.raw$percived_distance - tabla.raw$target_distance) / tabla.raw$target_distance
tabla.raw$unsigned_bias <- abs(tabla.raw$signed_bias)
idx = tabla.raw$subject == "S013" | tabla.raw$percived_distance == 0.05
tabla.raw[idx,]$percived_distance
tabla.raw[idx,]$percived_distance = 0.5
f_promedio <- function(x) c(mean = mean(x),
sd   = sd(x),
var  = var(x),
sem  = sd(x)/sqrt(length(x)),
n    = length(x))
results_tbl <- tibble(aggregate(cbind(percived_distance,signed_bias,unsigned_bias,abs_bias) ~ subject*block*condition*target_distance*type*location,
data = tabla.raw,
FUN  = f_promedio,na.action = NULL))
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
setwd("D:/GITHUB/ExperimentoElevacion/Analysis Results")
library(tidyverse)
# library(nlme)
library(effects)
library(lme4)
# library(nlme)
library(sjPlot)
library(MuMIn)
library(lmerTest)
library(jtools)
library(gdtools)
library(broom)
library(ggstatsplot)
library(modelsummary)
# library(gmodels)
library(ggpubr)
# install.packages("stargazer")
# library(stargazer)
# library(nlme)
# install.packages("sjPlot")
library(flextable)
library(sjPlot)
# install.packages("webshot")
library(webshot)
library(officer)
rm(list=ls())
figures_folder = "figuras"
library(tidyverse)
library(Routliers)
rm(list=ls())
rm(list=ls())
results_tbl <- read.csv("./DatosUnificados/Dresults.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
View(results_tbl)
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
location = factor(location),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
rm(list=ls())
figures_folder = "figuras"
#Data entry -----
rm(list=ls())
figures_folder = "figuras"
data_folder         = "./DatosUnificados/Datos nuevos sentados"
cat('/* Importando datos desde la carpeta \'', data_folder, '\':\n', sep = '')
c <- 0
for (archivo in dir(data_folder, pattern = '*.csv')) {
ruta_completa <- paste(data_folder, .Platform$file.sep, archivo, sep = '')
cat('- Cargando archivo: \'', ruta_completa, '\'\n', sep = '')
tabla_temp <- read.csv(ruta_completa, header = TRUE, sep = ',', stringsAsFactors = TRUE)
if (c == 0)
tabla.raw <- tabla_temp
else
tabla.raw <- rbind(tabla.raw, tabla_temp)
c <- c + 1
}
rm("c", "tabla_temp", "archivo", "ruta_completa")
tabla.raw <- tabla.raw%>%
mutate(type = case_when(
condicion == 0 ~ "NORMAL",
condicion == 2 ~ "ROVED"
))
tabla.raw <- tabla.raw%>%
mutate(condition = case_when(
altura == 0 ~ "Floor level",
altura == 1 ~ "Ear level"
))
tabla.raw <- tabla.raw%>%
mutate(subject = case_when(
nsub == 1 ~ "T001",
nsub == 2 ~ "T001",
nsub == 3 ~ "T001",
nsub == 4 ~ "T001",
nsub == 5 ~ "T001",
nsub == 6 ~ "T001",
nsub == 7 ~ "T001",
nsub == 8 ~ "T001",
nsub == 9 ~ "T001",
nsub == 10 ~ "T001",
nsub == 11 ~ "T001",
nsub == 12 ~ "T001",
nsub == 13 ~ "T001"
))
tabla.raw = tabla.raw %>% rename(block = bloque)   # renombro columnas
tabla.raw = tabla.raw %>% rename(trial = itrial)   # renombro columnas
tabla.raw = tabla.raw %>% rename(percived_distance = respuesta)   # renombro columnas
tabla.raw = tabla.raw %>% rename(target_distance = distancia)   # renombro columnas
tabla.raw <- tabla.raw[ , !(names(tabla.raw) %in% c("nsub","altura","condicion"))]
tabla.raw$location = "sitting"
tabla.raw2 <- read.csv("./DatosUnificados/datacrudafinal2.csv", header = TRUE, sep = ';', stringsAsFactors = TRUE)
tabla.raw2$location = "standing"
tabla.raw = merge(x = tabla.raw, y = tabla.raw2, all = TRUE)
rm("tabla.raw2")
tabla.raw$abs_bias <-  tabla.raw$percived_distance - tabla.raw$target_distance
tabla.raw$signed_bias <- (tabla.raw$percived_distance - tabla.raw$target_distance) / tabla.raw$target_distance
tabla.raw$unsigned_bias <- abs(tabla.raw$signed_bias)
idx = tabla.raw$subject == "S013" | tabla.raw$percived_distance == 0.05
tabla.raw[idx,]$percived_distance = 0.5
f_promedio <- function(x) c(mean = mean(x),
sd   = sd(x),
var  = var(x),
sem  = sd(x)/sqrt(length(x)),
n    = length(x))
results_tbl <- tibble(aggregate(cbind(percived_distance,signed_bias,unsigned_bias,abs_bias) ~ subject*block*condition*target_distance*type*location,
data = tabla.raw,
FUN  = f_promedio,na.action = NULL))
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
location = factor(location),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
results_tbl %>%
# clean_names() %>%
mutate(subject = factor(subject),
condition = factor(condition),
type = factor(type),
block = factor(block),
location = factor(location),
perc_dist_sd = percived_distance[,"sd"],
perc_dist_sem = percived_distance[,"sem"],
perc_dist_var = percived_distance[,"var"],
perc_dist_n = percived_distance[,"n"],
perc_dist = percived_distance[,"mean"],
rel_bias_signed_sd = signed_bias[,"sd"],
rel_bias_signed_sem = signed_bias[,"sem"],
rel_bias_signed_var = signed_bias[,"var"],
rel_bias_signed_n = signed_bias[,"n"],
rel_bias_signed = signed_bias[,"mean"],
rel_bias_unsigned_sd = unsigned_bias[,"sd"],
rel_bias_unsigned_sem = unsigned_bias[,"sem"],
rel_bias_unsigned_var = unsigned_bias[,"var"],
rel_bias_unsigned_n = unsigned_bias[,"n"],
rel_bias_unsigned = unsigned_bias[,"mean"],
abs_bias_sd = abs_bias[,"sd"],
abs_bias_sem = abs_bias[,"sem"],
abs_bias_var = abs_bias[,"var"],
abs_bias_n = abs_bias[,"n"],
abs_bias = abs_bias[,"mean"]) %>%
select(-c(percived_distance,signed_bias,unsigned_bias,abs_bias)) %>%
write_csv("./DatosUnificados/Dresults.csv")
library(tidyverse)
library(Routliers)
rm(list=ls())
results_tbl <- read.csv("./DatosUnificados/Dresults.csv", header = TRUE, sep = ',', stringsAsFactors = TRUE)
# Unsigned bias
cbPalette <- c("#000000","#E69F00","#009E73", "#999999", "#D55E00", "#0072B2", "#CC79A7", "#F0E442")
View(results_tbl)
f2 <- filter(results_tbl,type == "NORMAL", location == "sitting") %>%
group_by(subject,condition) %>%
summarise(mBiasUnsigned  = mean(rel_bias_unsigned)) %>%
ungroup() %>%
ggplot(aes(x = condition,y = 100*mBiasUnsigned,colour = condition, fill = condition)) +
geom_point(alpha = 0.4,
position = position_jitterdodge(jitter.width = .3,
jitter.height = 0,
dodge.width = 1 )) +
scale_colour_manual(values = cbPalette) +
scale_fill_manual(values = cbPalette) +
geom_abline(slope = 0,
intercept = 0,
alpha = 0.5,
linetype = "dashed") +
stat_summary(fun.data = "mean_se",
geom = "bar",
alpha = .4,
position = position_dodge(width = 1)) +
stat_summary(fun.data = "mean_se",
geom = "linerange",
size=2,
position = position_dodge(width = 1)) +
labs(x = "Condition",
y = "Relative signed \nbias [%]") +
theme_pubr(base_size = 12, margin = TRUE)+
theme(legend.position = "none")
f2
tabla.ind.Eye <- results_tbl %>%
filter(condition == "Ear level", type == "NORMAL", location == "sitting") %>%
group_by(subject,condition) %>%
summarise(mBiasUnsigned  = mean(rel_bias_unsigned ,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Eye$mBiasUnsigned,threshold = 3 ,na.rm=TRUE)
plot_outliers_mad(res3,x=tabla.ind.Eye$mBiasUnsigned,pos_display=TRUE)
tabla.ind.Eye <- results_tbl %>%
filter(condition == "Ear level", type == "NORMAL", location == "sitting") %>%
group_by(subject,condition) %>%
summarise(mBiasUnsigned  = mean(rel_bias_unsigned ,na.rm=TRUE))  %>%
ungroup()
res3 <- outliers_mad(x = tabla.ind.Eye$mBiasUnsigned,threshold = 3 ,na.rm=TRUE)
plot_outliers_mad(res3,x=tabla.ind.Eye$mBiasUnsigned,pos_display=TRUE)
tabla.ind.Eye[res3$outliers_pos,]
res3 <- outliers_mad(x = tabla.ind.Eye$mBiasUnsigned,threshold = 3 ,na.rm=TRUE)
tabla.ind.Eye <- results_tbl %>%
filter(condition == "Ear level", type == "NORMAL", location == "sitting") %>%
group_by(subject,condition) %>%
summarise(mBiasUnsigned  = mean(rel_bias_unsigned ,na.rm=TRUE))  %>%
ungroup()
